name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm' # Automatically caches dependencies

    - name: List directory contents
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Checking for package-lock.json:"
        find . -name "package-lock.json"

    - name: Install dependencies
      run: |
        if [ ! -f "package.json" ] || [ ! -f "package-lock.json" ]; then
          echo "Error: package.json or package-lock.json not found!"
          exit 1
        fi
        echo "Installing dependencies..."
        npm ci || npm install
        echo "Node version: $(node -v)"
        echo "NPM version: $(npm -v)"
        echo "Installed packages:"
        npm list --depth=0

    - name: Build TypeScript
      run: |
        if [ ! -f "tsconfig.json" ]; then
          echo "Error: tsconfig.json not found!"
          exit 1
        fi
        echo "Building TypeScript..."
        npm run build
        echo "Build completed."
        ls -la dist/

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Verify GCP Configuration
      run: |
        gcloud config list
        gcloud projects list

    - name: Authenticate with Google Cloud
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to App Engine
      run: |
        if [ ! -f "app.yaml" ]; then
          echo "Error: app.yaml not found!"
          exit 1
        fi
        echo "Starting deployment to App Engine..."
        gcloud app deploy app.yaml --quiet
